const createReport = async (req, res) => {
   const{ victim, reporter, where, description } = req.body
   
   let emptyFields = []

   if(!victim) {
      emptyFields.push = []
   }
   if(!reporter) {
      emptyFields.push('reporter')
   }
   if(!where) {
      emptyFields.push('where')
   }
   if(!description) {
      emptyFields.push('description')
   }
   if(emptyFields.length > 0) {
      return res.status(400).json({error: 'Please full in all fields', emptyFields})
   }
   // add doc to db
   try {
      const report = await Report.create({victim, reporter, where, description})    
      res.status(200).json(report)
   }  catch (error) {
      res.status(400).json({error: error.message})
   }
}


1)Create a Context Hook and wrap the whole application
(2)Inside useContext, create Reducer Hook to store data easily (POST and GET)
(3)create a Custom Hook, and within the Custom Hook, it will contain the useContext Hook. So in other component, all you need to do is import and call the Custom Hook, and no need to import useContext from React and make a const every single time
(4)replace the State Hook with Reducer Hook in Home.js. (GET)
(5)add the Reducer Hook to WorkoutForm (POST)